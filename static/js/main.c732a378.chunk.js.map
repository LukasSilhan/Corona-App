{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/CountryPicker/CounryPicker.jsx","components/Chart/Chart.jsx","App.js","index.js","components/CountryPicker/CountryPicker.module.css","App.module.css","components/Chart/Chart.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableurl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","CountryPicker","handleCountryChange","useState","fetchedCountries","setFetchedCountries","useEffect","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","event","target","i","key","Chart","setDailyData","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","App","state","fetchedData","setState","this","headerText","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c732a378.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1tDCa\",\"card\":\"Cards_card__3wLLR\",\"infected\":\"Cards_infected__2X116\",\"recovered\":\"Cards_recovered__c1TvD\",\"deaths\":\"Cards_deaths__3sk1O\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return \"Loading...\";\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing ={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                    <CardContent/>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Infikovaných</Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={confirmed.value} duration={2} separator=\",\"/></Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Aktivní případy koronaviru</Typography>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent/>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Uzdravených</Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={recovered.value} duration={1} separator=\",\" /></Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Počet vyléčených</Typography>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent/>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Podlehlo</Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={deaths.value} duration={0.5} separator=\",\" /></Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Počet zesnulých</Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n} \r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async(country) => {\r\n    let changeableurl = url;\r\n    if (country) {\r\n        changeableurl = `${url}/countries/${country}`\r\n    }\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableurl);\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async() => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`)\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async() => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n    useEffect(()=>{\r\n        const fetchAPI = async() => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    }, [setFetchedCountries])\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue='' onChange={(event) => handleCountryChange(event.target.value)}>\r\n                <option value=\"\">Globálně</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option> )}\r\n            </NativeSelect>\r\n        </FormControl>\r\n        </div>\r\n    )\r\n}\r\nexport default CountryPicker;","import React,{useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport { Line, Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n    useEffect(()=> {\r\n        const fetchAPI = async() => {\r\n            setDailyData( await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    },[]);\r\n\r\n    const lineChart = (\r\n        dailyData.length ? (\r\n        <Line\r\n            data={{\r\n                labels: dailyData.map(({date}) => date ),\r\n                datasets: [{\r\n                    data: dailyData.map(({confirmed}) => confirmed ),\r\n                    label: 'Potvrzených',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                },{\r\n                    data: dailyData.map(({deaths}) => deaths ),\r\n                    label: 'Podlehlo',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                    fill: true,}],\r\n            }}\r\n        />) : null\r\n    );\r\n\r\n    const barChart = (\r\n        data.confirmed ? \r\n        (\r\n            <Bar\r\n            data={{\r\n                labels: ['Potvrzených','Uzdravených','Podlehlo'],\r\n                datasets: [{\r\n                    label: 'Lidé',\r\n                    backgroundColor: ['rgba(255, 0, 0, 0.5)','rgba(0, 255, 0, 0.5)','rgba(0, 0, 0, 0.7)'],\r\n                    data: [data.confirmed.value, data.recovered.value, data.deaths.value],\r\n                }]\r\n            }}\r\n            options={{\r\n                legend: {display: false},\r\n                title: {display: true, text: 'Aktuální stav v dané zemi'},\r\n            }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {country? barChart: lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\nimport Cards from './components/Cards/Cards';\r\nimport CountryPicker from './components/CountryPicker/CounryPicker';\r\nimport Chart from './components/Chart/Chart';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        this.setState({ data: fetchedData });\r\n    }\r\n    handleCountryChange = async(country) => {\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({ data: fetchedData, country: country });\r\n    }\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n        return ( <\r\n            div className = { styles.container } >\r\n            <\r\n            header className = { styles.headerText } > Aktuální informace - COVID 19 < /header> <\r\n            Cards data = { data }\r\n            /> <\r\n            CountryPicker handleCountryChange = { this.handleCountryChange }\r\n            /> <\r\n            Chart data = { data }\r\n            country = { country }\r\n            /> < /\r\n            div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nReactDOM.render( < App / > , document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1FfC9\",\"container\":\"CountryPicker_container__39j3M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2aJKm\",\"headerText\":\"App_headerText__3pLOI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1OkzL\"};"],"sourceRoot":""}